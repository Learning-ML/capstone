table2 = matrix(ncol=dim(germany)[2]-5, nrow=dim(germany)[1]/2+1)
for (i in seq(1,104,2)){
for (j in (6:dim(germany)[2])){
table2[i,j-6] <- germany[i,j] + germany[i+1,j]
}
}
View(table2)
for (i in seq(1,104,2)){
for (j in (6:dim(germany)[2])){
table2[i,j-6] <- germany[i,j-1] + germany[i+1,j-1]
}
}
View(table2)
table2 = matrix(ncol=dim(germany)[2]-5, nrow=dim(germany)[1]/2+1)
for (i in seq(1,104,2)){
for (j in (6:dim(germany)[2]+1)){
table2[i,j-6] <- germany[i,j-1] + germany[i+1,j-1]
}
}
View(table2)
table2 = matrix(ncol=dim(germany)[2]-5, nrow=dim(germany)[1]/2+1)
for (i in seq(1,104)){
for (j in (6:dim(germany)[2]+1)){
table2[i,j-6] <- germany[i,j-1] + germany[i+1,j-1]
}
}
View(table2)
table2 = matrix(ncol=dim(germany)[2]-5, nrow=dim(germany)[1]+1)
for (i in seq(1,104,2)){
for (j in (6:dim(germany)[2]+1)){
table2[i,j-6] <- germany[i,j-1] + germany[i+1,j-1]
}
}
View(table2)
table2 = matrix(ncol=dim(germany)[2]-5, nrow=dim(germany)[1])
for (i in seq(1,104,2)){
for (j in (6:dim(germany)[2]+1)){
table2[i,j-6] <- germany[i,j-1] + germany[i+1,j-1]
}
}
germany_df = matrix(ncol=dim(germany)[2]-5, nrow=dim(germany)[1])
for (i in seq(1,104,2)){
for (j in (6:dim(germany)[2]+1)){
germany_df[i,j-6] <- germany[i,j-1] + germany[i+1,j-1]
}
}
View(germany_df)
test <- germany[,1:6]
View(test)
test <- germany[,1:5]
test <- cbind(germany[,1:5], germany_df)
View(test)
test <- test[test$COUNTRY != 'West Germany']
test <- test[test$COUNTRY != 'West Germany ']
test <- test[test$COUNTRY == 'West Germany']
test <- test[test$COUNTRY == 'West Germany',]
test <- cbind(germany[,1:5], germany_df)
test <- test[test$COUNTRY != 'West Germany',]
test <- cbind(germany[,1:5], germany_df)
test <- test[!test$COUNTRY == 'West Germany',]
test <- cbind(germany[,1:5], germany_df)
test <- test[test$COUNTRY != 'West Germany',]
test2 <- rbind(df_all, test)
names <- colnames(df_all)
colnames(test) <- names
View(test)
test2 <- rbind(df_all, test)
germany_df <- cbind(germany[,1:5], germany_df)
germany_df <- germany_df[germany_df$COUNTRY != 'West Germany',]
View(germany_df)
colnames(germany_df) <- names
test <- df_all[df_all$COUNTRY != 'West Germany' | df_all$COUNTRY != 'Germany' |,]
test <- df_all[df_all$COUNTRY != 'West Germany' & df_all$COUNTRY != 'Germany' |,]
test <- df_all[df_all$COUNTRY != c('West Germany', 'Germany'),]
View(test)
test <- df_all[!df_all$COUNTRY %in% c('West Germany', 'Germany'),]
View(test)
df_all <- df_all[!df_all$COUNTRY %in% c('West Germany', 'Germany'),]
test <- rbind(df_all, germany_df)
View(test)
df_all <- rbind(df_all, germany_df)
table1 = matrix(ncol=dim(df_all)[2]-1-6, nrow=dim(df_all)[1])
for (i in (1:dim(df_all)[1])) {
for (j in (6:dim(df_all)[2]-1)){
table1[i,j-6] <- (df_all[i,j]/df_all[i,j-1]-1)
}
}
View(table1)
View(table1)
table1 = matrix(ncol=dim(df_all)[2]-1-5, nrow=dim(df_all)[1])
for (i in (1:dim(df_all)[1])) {
for (j in (6:dim(df_all)[2]-1)){
table1[i,j-6] <- (df_all[i,j]/df_all[i,j-1]-1)
}
}
View(table1)
for (i in (1:dim(df_all)[1])) {
for (j in (6:dim(df_all)[2])){
table1[i,j-6] <- (df_all[i,j]/df_all[i,j-1]-1)
}
}
View(table1)
test <- cbind(df_all[,1:5], table1)
View(test)
colnames(test) <- names
names_growth <- colnames(df_all)
names_growth
names_growth['X1960'] <- NULL
names_growth[6] <- NULL
names_growth[[6]] <- NULL
names_growth[6]
names_growth[-6]
names_growth <- names_growth[-6]
names_growth
colnames(test) <- names_growth
View(test)
growth = matrix(ncol=dim(df_all)[2]-1-5, nrow=dim(df_all)[1])
for (i in (1:dim(df_all)[1])) {
for (j in (6:dim(df_all)[2])){
growth[i,j-6] <- (df_all[i,j]/df_all[i,j-1]-1)
}
}
growth <- cbind(df_all[,1:5], growth)
names_growth <- colnames(df_all)
names_growth <- names_growth[-6]
colnames(growth) <- names_growth
View(growth)
df_all <- cbind(df_all[,1:5], growth)
colnames(df_all) <- names_growth
View(df_all)
df_all <- rbind(df1,
df2,
df3,
df4,
df5,
df6,
df7,
df8,
df9,
df10,
df11,
df12,
df13,
df14,
df15,
df16,
df17,
df18)
countries  = c('Austria', 'Belgium', 'Bulgaria','Cyprus','Croatia','Czech Republic','Denmark',
'Estonia' ,'Finland' ,'France' ,'Germany' ,'West Germany' ,
'Greece' ,'Hungary','Ireland' ,'Italy' ,'Latvia' ,'Lithuania','Luxembourg'
,'Malta' ,'Netherlands' ,'Portugal' ,'Poland' ,'Romania' ,'Slovenia',
'Spain','Slovakia' ,'Sweden' ,'United Kingdom')
df_all <- df_all[df_all$COUNTRY %in% countries, ]
features = c('Total population ', 'Population: 0 to 14 years ',  'Population: 15 to 64 years ',  'Population: 65 years and over ',  'Civilian employment, persons (national) ',  'Unemployment rate: total :- Member States: definition EUROSTAT ',  'Private final consumption expenditure at current prices ',  'Price deflator private final consumption expenditure ',  'Private final consumption expenditure at current prices per head of population ',  'Collective consumption of general government at current prices ',  'Total consumption at current prices ',  'Gross fixed capital formation at current prices: total economy ',  'Consumption of fixed capital at current prices: total economy ',  'Gross capital formation at current prices: total economy ',  'Gross national saving ',  'Domestic demand excluding stocks at current prices ',  'Final demand at current prices ',  'Gross national income at current prices ',  'Gross national income at current prices per head of population ',  'Gross national disposable income ',  'National disposable income ',  'Gross domestic product at current prices ',  'Gross domestic product at current prices per hour worked ',  'Total annual hours worked: total economy ',  'Domestic income at current prices ',  'Compensation of employees: total economy ',  'Taxes linked to imports and production: total economy ',  'Subsidies: total economy ',  'Gross operating surplus: total economy ',  'Net operating surplus: total economy ',  'Nominal compensation per employee: total economy ',  'Net capital stock at 2010 prices: total economy ',  'Net returns on net capital stock: total economy ',  'Total factor productivity: total economy ',  'Exports of goods and services at current prices (National accounts) ',  'Imports of goods and services at current prices (National accounts) ',  'Exports of goods at current prices (National accounts) ',  'Exports of services at current prices (National accounts) ',  'Imports of goods at current prices (National accounts) ',  'Imports of services at current prices (National accounts) ',  'Terms of trade goods and services (National accounts) ',  'Net exports of goods and services at current prices (National accounts) ',  'Net primary income from the rest of the world (National accounts) ',  'Balance on current transactions with the rest of the world (National accounts) ',  'Net lending (+) or net borrowing (-): total economy ',  'Current account balance, Balance of payments statistics (BPM6) :- Partner: world ',  'Total exports of goods :- Foreign trade statistics ',  'Total imports of goods :- Foreign trade statistics ',  'ECU-EUR exchange rates (annual averages) :- Units of national currency per EUR/ECU ',  'Conversion rates between euro and former euro-zone national currencies ',  'Nominal short-term interest rates ',  'Nominal long-term interest rates ',  'Yield curve ',  'Current taxes on income and wealth: corporations ',  'Gross disposable income, corporations ',  'Net disposable income, corporations ',  'Gross saving: corporations ',  'Net saving: corporations ',  'Net lending (+) or net borrowing (-): corporations ',  'Net saving: households ',  'Current tax burden: total economy :- ESA 2010 ',  'Net saving: general government :- ESA 2010 ',  'Net lending (+) or net borrowing (-): general government :- ESA 2010 ',  'General government consolidated gross debt :- Excessive deficit procedure (based on ESA 2010) ')
df_all <- df_all[df_all$TITLE %in% features, ]
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY))
library(dplyr)
library(dplyr)
df_all <- rbind(df1,
df2,
df3,
df4,
df5,
df6,
df7,
df8,
df9,
df10,
df11,
df12,
df13,
df14,
df15,
df16,
df17,
df18)
countries  = c('Austria', 'Belgium', 'Bulgaria','Cyprus','Croatia','Czech Republic','Denmark',
'Estonia' ,'Finland' ,'France' ,'Germany' ,'West Germany' ,
'Greece' ,'Hungary','Ireland' ,'Italy' ,'Latvia' ,'Lithuania','Luxembourg'
,'Malta' ,'Netherlands' ,'Portugal' ,'Poland' ,'Romania' ,'Slovenia',
'Spain','Slovakia' ,'Sweden' ,'United Kingdom')
df_all <- df_all[df_all$COUNTRY %in% countries, ]
features = c('Total population ', 'Population: 0 to 14 years ',  'Population: 15 to 64 years ',  'Population: 65 years and over ',  'Civilian employment, persons (national) ',  'Unemployment rate: total :- Member States: definition EUROSTAT ',  'Private final consumption expenditure at current prices ',  'Price deflator private final consumption expenditure ',  'Private final consumption expenditure at current prices per head of population ',  'Collective consumption of general government at current prices ',  'Total consumption at current prices ',  'Gross fixed capital formation at current prices: total economy ',  'Consumption of fixed capital at current prices: total economy ',  'Gross capital formation at current prices: total economy ',  'Gross national saving ',  'Domestic demand excluding stocks at current prices ',  'Final demand at current prices ',  'Gross national income at current prices ',  'Gross national income at current prices per head of population ',  'Gross national disposable income ',  'National disposable income ',  'Gross domestic product at current prices ',  'Gross domestic product at current prices per hour worked ',  'Total annual hours worked: total economy ',  'Domestic income at current prices ',  'Compensation of employees: total economy ',  'Taxes linked to imports and production: total economy ',  'Subsidies: total economy ',  'Gross operating surplus: total economy ',  'Net operating surplus: total economy ',  'Nominal compensation per employee: total economy ',  'Net capital stock at 2010 prices: total economy ',  'Net returns on net capital stock: total economy ',  'Total factor productivity: total economy ',  'Exports of goods and services at current prices (National accounts) ',  'Imports of goods and services at current prices (National accounts) ',  'Exports of goods at current prices (National accounts) ',  'Exports of services at current prices (National accounts) ',  'Imports of goods at current prices (National accounts) ',  'Imports of services at current prices (National accounts) ',  'Terms of trade goods and services (National accounts) ',  'Net exports of goods and services at current prices (National accounts) ',  'Net primary income from the rest of the world (National accounts) ',  'Balance on current transactions with the rest of the world (National accounts) ',  'Net lending (+) or net borrowing (-): total economy ',  'Current account balance, Balance of payments statistics (BPM6) :- Partner: world ',  'Total exports of goods :- Foreign trade statistics ',  'Total imports of goods :- Foreign trade statistics ',  'ECU-EUR exchange rates (annual averages) :- Units of national currency per EUR/ECU ',  'Conversion rates between euro and former euro-zone national currencies ',  'Nominal short-term interest rates ',  'Nominal long-term interest rates ',  'Yield curve ',  'Current taxes on income and wealth: corporations ',  'Gross disposable income, corporations ',  'Net disposable income, corporations ',  'Gross saving: corporations ',  'Net saving: corporations ',  'Net lending (+) or net borrowing (-): corporations ',  'Net saving: households ',  'Current tax burden: total economy :- ESA 2010 ',  'Net saving: general government :- ESA 2010 ',  'Net lending (+) or net borrowing (-): general government :- ESA 2010 ',  'General government consolidated gross debt :- Excessive deficit procedure (based on ESA 2010) ')
df_all <- df_all[df_all$TITLE %in% features, ]
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY))
df_all <- df_all %>% filter(COUNTRY != 'Malta')
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY))
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY)) %>% filter(count ==28)
df_all <- df_all %>% filter(TITLE %in% country_by_title$TITLE)
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY))
units <- c('1000 persons',
'(Percentage of active population) ',
'Mrd ECU/EUR',
'(1000 EUR) ',
'(millions) ',
'(Mrd EUR) ',
'(%) ')
temp_1 <- df_all %>% filter(UNIT %in% units)
temp_2 <- df_all %>% filter(TITLE %in% c("Taxes linked to imports and production: total economy ",
"Subsidies: total economy ",
"Gross operating surplus: total economy ",
"Net operating surplus: total economy ",
"Gross domestic product at current prices per hour worked "))
df_all <- rbind(temp_1, temp_2)
test <- df_all %>% group_by(TITLE) %>% summarize(count= n())
df_all <- df_all[!((df_all$TITLE == 'Gross domestic product at current prices per hour worked ') &
(df_all$UNIT == '(PPS: EU-15 = 100) ')),]
df_all <- df_all[!((df_all$TITLE == 'Gross domestic product at current prices per hour worked ') &
(df_all$UNIT == '(PPS: EU-28 = 100) ')),]
test <- df_all %>% group_by(TITLE) %>% summarize(count= n())
df_all$X2018 <- NULL
df_all$X     <- NULL
germany = df_all[df_all$COUNTRY=='Germany' | df_all$COUNTRY=='West Germany',]
germany[is.na(germany)] = 0
germany_df = matrix(ncol=dim(germany)[2]-5, nrow=dim(germany)[1])
for (i in seq(1,104,2)){
for (j in (6:dim(germany)[2]+1)){
germany_df[i,j-6] <- germany[i,j-1] + germany[i+1,j-1]
}
}
germany_df <- cbind(germany[,1:5], germany_df)
germany_df <- germany_df[germany_df$COUNTRY != 'West Germany',]
names <- colnames(df_all)
colnames(germany_df) <- names
df_all <- df_all[!df_all$COUNTRY %in% c('West Germany', 'Germany'),]
df_all <- rbind(df_all, germany_df)
growth = matrix(ncol=dim(df_all)[2]-1-5, nrow=dim(df_all)[1])
for (i in (1:dim(df_all)[1])) {
for (j in (6:dim(df_all)[2])){
growth[i,j-6] <- (df_all[i,j]/df_all[i,j-1]-1)
}
}
View(df_all)
View(growth)
df_all <- cbind(df_all[,1:5], growth)
View(df_all)
names_growth <- colnames(df_all)
names_growth <- names_growth[-6]
colnames(df_all) <- names_growth
View(df_all)
df_all <- rbind(df1,
df2,
df3,
df4,
df5,
df6,
df7,
df8,
df9,
df10,
df11,
df12,
df13,
df14,
df15,
df16,
df17,
df18)
# create list of EU countries
countries  = c('Austria', 'Belgium', 'Bulgaria','Cyprus','Croatia','Czech Republic','Denmark',
'Estonia' ,'Finland' ,'France' ,'Germany' ,'West Germany' ,
'Greece' ,'Hungary','Ireland' ,'Italy' ,'Latvia' ,'Lithuania','Luxembourg'
,'Malta' ,'Netherlands' ,'Portugal' ,'Poland' ,'Romania' ,'Slovenia',
'Spain','Slovakia' ,'Sweden' ,'United Kingdom')
# filter df_all by EU countries
df_all <- df_all[df_all$COUNTRY %in% countries, ]
# create list of features selected
features = c('Total population ', 'Population: 0 to 14 years ',  'Population: 15 to 64 years ',  'Population: 65 years and over ',  'Civilian employment, persons (national) ',  'Unemployment rate: total :- Member States: definition EUROSTAT ',  'Private final consumption expenditure at current prices ',  'Price deflator private final consumption expenditure ',  'Private final consumption expenditure at current prices per head of population ',  'Collective consumption of general government at current prices ',  'Total consumption at current prices ',  'Gross fixed capital formation at current prices: total economy ',  'Consumption of fixed capital at current prices: total economy ',  'Gross capital formation at current prices: total economy ',  'Gross national saving ',  'Domestic demand excluding stocks at current prices ',  'Final demand at current prices ',  'Gross national income at current prices ',  'Gross national income at current prices per head of population ',  'Gross national disposable income ',  'National disposable income ',  'Gross domestic product at current prices ',  'Gross domestic product at current prices per hour worked ',  'Total annual hours worked: total economy ',  'Domestic income at current prices ',  'Compensation of employees: total economy ',  'Taxes linked to imports and production: total economy ',  'Subsidies: total economy ',  'Gross operating surplus: total economy ',  'Net operating surplus: total economy ',  'Nominal compensation per employee: total economy ',  'Net capital stock at 2010 prices: total economy ',  'Net returns on net capital stock: total economy ',  'Total factor productivity: total economy ',  'Exports of goods and services at current prices (National accounts) ',  'Imports of goods and services at current prices (National accounts) ',  'Exports of goods at current prices (National accounts) ',  'Exports of services at current prices (National accounts) ',  'Imports of goods at current prices (National accounts) ',  'Imports of services at current prices (National accounts) ',  'Terms of trade goods and services (National accounts) ',  'Net exports of goods and services at current prices (National accounts) ',  'Net primary income from the rest of the world (National accounts) ',  'Balance on current transactions with the rest of the world (National accounts) ',  'Net lending (+) or net borrowing (-): total economy ',  'Current account balance, Balance of payments statistics (BPM6) :- Partner: world ',  'Total exports of goods :- Foreign trade statistics ',  'Total imports of goods :- Foreign trade statistics ',  'ECU-EUR exchange rates (annual averages) :- Units of national currency per EUR/ECU ',  'Conversion rates between euro and former euro-zone national currencies ',  'Nominal short-term interest rates ',  'Nominal long-term interest rates ',  'Yield curve ',  'Current taxes on income and wealth: corporations ',  'Gross disposable income, corporations ',  'Net disposable income, corporations ',  'Gross saving: corporations ',  'Net saving: corporations ',  'Net lending (+) or net borrowing (-): corporations ',  'Net saving: households ',  'Current tax burden: total economy :- ESA 2010 ',  'Net saving: general government :- ESA 2010 ',  'Net lending (+) or net borrowing (-): general government :- ESA 2010 ',  'General government consolidated gross debt :- Excessive deficit procedure (based on ESA 2010) ')
# filter df_all by 64 features
df_all <- df_all[df_all$TITLE %in% features, ]
#########################################################
# Attempt 1 to identify common features among all countries (DO NOT USE)
#########################################################
# examine number of distinct features in each country; determined that Germany's features would be used since it has the least number
test <- df_all %>% group_by(COUNTRY) %>% summarise(count = n_distinct(TITLE))
# identify the subset of features missing in Germany; validate features discarded are not important
ger_features <- (df_all %>% filter(COUNTRY=='Germany') %>% group_by(TITLE) %>% summarize(count = n()))[,1]
leftover_features_ger <- features[!(features %in% ger_features$TITLE)]
# discarded features
# [1] "Price deflator private final consumption expenditure "
# [2] "Net returns on net capital stock: total economy "
# [3] "Total factor productivity: total economy "
# [4] "Terms of trade goods and services (National accounts) "
# [5] "ECU-EUR exchange rates (annual averages) :- Units of national currency per EUR/ECU "
# [6] "Conversion rates between euro and former euro-zone national currencies "
# filter all countries by Germany's features
df_all <- df_all %>% filter(TITLE %in% ger_features$TITLE)
# re-examine number of features for each country
test <- df_all %>% group_by(COUNTRY) %>% summarise(count = n_distinct(TITLE))
# identify the subset of features missing in Germany; validate features discarded are not important
rom_features <- (df_all %>% filter(COUNTRY=='Romania') %>% group_by(TITLE) %>% summarize(count = n()))[,1]
leftover_features_rom <- ger_features$TITLE[!(ger_features$TITLE %in% rom_features$TITLE)]
# discarded features
# [1] Civilian employment, persons (national)
#filter all countries by Romania's features
test <- df_all %>% filter(TITLE %in% rom_features$TITLE)
# re-examine number of features for each country
test <- df_all %>% group_by(COUNTRY) %>% summarise(count = n_distinct(TITLE))
#########################################################
# Attempt 2 to identify common features among all countries
#########################################################
# identify number of countries for each feature
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY))
# we learned that Malta has 10 features missing.
#We decided to remove Malta from the analysis because it is a small country
# We considered using a similar-sized country to impute Malta's missing values, however
# Luxumbourg, the country closest to Malta's size, while similar population, GDP was 5x Malta's
# remove Malta from df_all
df_all <- df_all %>% filter(COUNTRY != 'Malta')
# re-identify number of countries for each feature
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY))
# find the Titles with 28 countries
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY)) %>% filter(count ==28)
# filter df_all by 52 titles with all the countries
df_all <- df_all %>% filter(TITLE %in% country_by_title$TITLE)
# re-identify number of countries for each feature
country_by_title <- df_all %>% group_by(TITLE) %>% summarize(count= n_distinct(COUNTRY))
#########################################################
# Select 1 unit per title
#########################################################
# create unique sets of units (this excludes the following features:
# Taxes linked to imports and production: total economy,
# Subsidies: total economy,
# Gross operating surplus: total economy,
# Net operating surplus: total economy)
units <- c('1000 persons',
'(Percentage of active population) ',
'Mrd ECU/EUR',
'(1000 EUR) ',
'(millions) ',
'(Mrd EUR) ',
'(%) ')
# creating temp data frames
temp_1 <- df_all %>% filter(UNIT %in% units)
temp_2 <- df_all %>% filter(TITLE %in% c("Taxes linked to imports and production: total economy ",
"Subsidies: total economy ",
"Gross operating surplus: total economy ",
"Net operating surplus: total economy ",
"Gross domestic product at current prices per hour worked "))
# combine temps into df_all
df_all <- rbind(temp_1, temp_2)
# confirm there are 28 countries for each feature (Germany and West Germany are still separate)
test <- df_all %>% group_by(TITLE) %>% summarize(count= n())
# clean features with more than one units
df_all <- df_all[!((df_all$TITLE == 'Gross domestic product at current prices per hour worked ') &
(df_all$UNIT == '(PPS: EU-15 = 100) ')),]
df_all <- df_all[!((df_all$TITLE == 'Gross domestic product at current prices per hour worked ') &
(df_all$UNIT == '(PPS: EU-28 = 100) ')),]
# re-confirm there are 28 countries for each feature (Germany and West Germany are still separate)
test <- df_all %>% group_by(TITLE) %>% summarize(count= n())
#####################################
# Remove X2018 and X (empty column) #
#####################################
df_all$X2018 <- NULL
df_all$X     <- NULL
############################################################
# Creating New Germany (Combined Germany and West Germany) #
############################################################
# grab all observations with Germany or West Germany
germany = df_all[df_all$COUNTRY=='Germany' | df_all$COUNTRY=='West Germany',]
# impute NA's as 0's to sum
germany[is.na(germany)] = 0
# Create empty data frame
germany_df = matrix(ncol=dim(germany)[2]-5, nrow=dim(germany)[1])
# combine values for Germany and West Germany
for (i in seq(1,104,2)){
for (j in (6:dim(germany)[2]+1)){
germany_df[i,j-6] <- germany[i,j-1] + germany[i+1,j-1]
}
}
# convert back to origin df_all structure
germany_df <- cbind(germany[,1:5], germany_df)
# remove West Germany from germany_df
germany_df <- germany_df[germany_df$COUNTRY != 'West Germany',]
# get original column names
names <- colnames(df_all)
# rename column names
colnames(germany_df) <- names
################################################
# remove Germany and West Germany from df_all  #
################################################
df_all <- df_all[!df_all$COUNTRY %in% c('West Germany', 'Germany'),]
################################
# rbind germany_df with df_all #
################################
df_all <- rbind(df_all, germany_df)
################################################
# Calculate Growth Rates (Feature Engineering) #
################################################
# create empty data frame
growth = matrix(ncol=dim(df_all)[2]-1-5, nrow=dim(df_all)[1])
# calculate growth rates
for (i in (1:dim(df_all)[1])) {
for (j in (6:dim(df_all)[2])){
growth[i,j-6] <- (df_all[i,j]/df_all[i,j-1]-1)
}
}
names_growth <- colnames(df_all)
names_growth <- names_growth[-6]
df_all <- cbind(df_all[,1:5], growth)
colnames(df_all) <- names_growth
View(df_all)
View(df_all)
dim(df_all)
test <- gather(df_all, key="year", value="value", 6:62)
library(tidyr)
test <- gather(df_all, key="year", value="value", 6:62)
View(test)
test <- spread(test, key=TITLE, value="value")
View(test)
View(df_all)
View(aus)
aus[, c('CODE')] <- NULL
View(aus)
test <- df_all
test[, c('CODE', 'COUNTRY', 'SUB.CHAPTER', 'UNIT')] <- NULL
View(test)
test <- gather(df_all, key="year", value="value", 6:62)
test <- spread(test, key=TITLE, value="value")
View(test)
test <- df_all
test[, c('CODE', 'COUNTRY', 'SUB.CHAPTER', 'UNIT')] <- NULL
test <- gather(test, key="year", value="value", 6:62)
dim(test)
test <- gather(test, key="year", value="value", 2:58)
test <- spread(test, key=TITLE, value="value")
View(test)
test <- df_all
test[, c('CODE', 'COUNTRY', 'SUB.CHAPTER', 'UNIT')] <- NULL
View(test)
test <- gather(test, key="year", value="value", 2:58)
test <- spread(test, key=TITLE, value="value")
test <- df_all
test[, c('CODE', 'SUB.CHAPTER', 'UNIT')] <- NULL
test <- gather(test, key="year", value="value", 2:58)
test <- df_all
test[, c('CODE', 'SUB.CHAPTER', 'UNIT')] <- NULL
View(test)
dim(test)
test <- gather(test, key="year", value="value", 3:59)
test <- spread(test, key=TITLE, value="value")
View(test)
test <- df_all
test[, c('CODE', 'SUB.CHAPTER', 'UNIT')] <- NULL
View(test)
test <- gather(test, key="year", value="value", 3:59)
View(test)
test <- df_all
dim(test)
test[, c('UNIT')] <- NULL
dim(test)
test <- gather(test, key="year", value="value", 5:61)
test <- spread(test, key=TITLE, value="value")
View(test)
test <- df_all
test[, c('CODE', 'SUB.CHAPTER', 'UNIT')] <- NULL
test <- gather(test, key="year", value="value", 3:59)
test <- spread(test, key=TITLE, value="value")
View(test)
df_all[, c('CODE', 'SUB.CHAPTER', 'UNIT')] <- NULL
df_all <- gather(df_all, key="year", value="value", 3:59)
df_all <- spread(df_all, key=TITLE, value="value")
View(df_all)
test <- df_all$year
gsub('x', '', test)
gsub('X', '', test)
as.numeric(gsub('X', '', test))
test <- as.numeric(gsub('X', '', test))
df_all$year <- as.numeric(gsub('X', '', df_all$year))
View(df_all)
setwd("~/Downloads/NYCDSA/Project/Capstone/ameco")
write.csv(df_all, 'df_all')
write.csv(df_all, 'df_all.csv')
?write.csv
write.csv(df_all, 'df_all.csv', row.names = FALSE)
dim(df_all)
feature_names <- colnames(df_all)[3:54]
feature_code = c()
for (i in 1:52) {
feature_code=c(feature_code,paste('f',i))
}
feature_code = c()
for (i in 1:52) {
feature_code=c(feature_code,paste0('f',i))
}
test <- df_all
View(test)
colnames(test[3:54]) <- feature_code
View(test)
feature_code
colnames(test[3:54])
colnames(test[3:54]) <- feature_code
View(test)
View(test)
colnames(test[3:54]) <- feature_code
View(test)
colnames(test[3:54]) <- 'feature_code'
View(test)
colnames(test) <- 'feature_code'
View(test)
colnames(test)[1:4] <- 'feature_code'
View(test)
test <- df_all
colnames(test)[3:54] <- feature_code
View(test)
colnames(df_all)[3:54] <- feature_code
View(df_all)
write.csv(df_all, 'df_all.csv', row.names = FALSE)
View(df_all)
save.image("~/Downloads/NYCDSA/Project/Capstone/ameco/data_import.RData")
save.image("~/Downloads/NYCDSA/Project/Capstone/ameco/data_import.RData")
